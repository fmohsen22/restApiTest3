package com.glh.glh.dao;import com.glh.glh.model.GlhModel;import org.springframework.stereotype.Repository;import com.sentence.elements.*;import com.sentence.elements.artikel.*;import java.util.ArrayList;import java.util.List;@Repository("Dao")public class GlhDataAccessService implements GlhDAO {    Words word;    @Override    public String insertWord( GlhModel glhModel) {        word=Words.of(glhModel.getWord());        return "Data successfully inserted";    }    @Override    public Nomens selectWordElements() { //not Active        if (word != null) {        return Nomens.of(word.getWord());}//        else return Nomens.of("Zeit");        else return Nomens.of(null);    }    @Override    public Verbs selectVerbElements() {        return Verbs.of("anfangen");    }//not Active    @Override    public Words showWordElements() {        if (word != null){        if (word.getWordType() == GLHConstants.WType.NOMEN.getValue()) {            return Nomens.of(word.getWord());        }        else if (word.getWordType() == GLHConstants.WType.VERB.getValue()){            return Verbs.of(word.getWord());        }        else if (word.getWordType() == GLHConstants.WType.ADJEKTIV.getValue()){            return Adjektive.of(word.getWord());        }        else if (word.getWordType() == GLHConstants.WType.ADVERB.getValue()){            return Adverbien.of(word.getWord());        }        else if (word.getWordType() == GLHConstants.WType.PRAEPOSITION.getValue()){            return Praeposition.of(word.getWord());        }        else if (word.getWordType() == GLHConstants.WType.POSSESSIVARTIKEL.getValue()){            return PossessivArtikel.of(word.getWord());        } else if (word.getWordType() == GLHConstants.WType.BESTIMMTEARTIKEL.getValue()){            return BestimmteArtikel.of(word.getWord());        }else if (word.getWordType() == GLHConstants.WType.UNBESTIMMTEARTIKEL.getValue()){            return UnbestimmteArtikel.of(word.getWord());        }else if (word.getWordType() == GLHConstants.WType.DEMONSTRATIVARTIKEL.getValue()){            return Demonstrativartikel.of(word.getWord());        }else if (word.getWordType() == GLHConstants.WType.INDEFINITIARTIKEL.getValue()){            return IndefinitArtikel.of(word.getWord());        }else if (word.getWordType() == GLHConstants.WType.INTERROGATIVARTIKEL.getValue()){            return InterrogativArtikel.of(word.getWord());        }else if (word.getWordType() == GLHConstants.WType.NUMERALEKZ.getValue()){            return ZahlWoerter.of(word.getWord());        }else if (word.getWordType() == GLHConstants.WType.NUMERALEOZ.getValue()){            return ZahlWoerter.of(word.getWord());        }else if (word.getWordType() == GLHConstants.WType.NUMERALEBZ.getValue()){            return ZahlWoerter.of(word.getWord());        }else if (word.getWordType() == GLHConstants.WType.NUMERALEMW.getValue()){            return ZahlWoerter.of(word.getWord());        }        }        return null;    }}